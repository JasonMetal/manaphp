<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>ManaPHP Admin</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <link rel="stylesheet" href="@asset('/static/css/manaphp.css')">
    <link rel="stylesheet" href="https://cdn.bootcss.com/element-ui/2.4.0/theme-chalk/index.css">
    <!--[if lt IE 9]>
    <script src="http://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="http://cdn.bootcss.com/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <style>
        .el-pagination {
            text-align: center;
        }

        .el-submenu .el-menu-item {
            height: 30px;
            line-height: 30px;
        }

        .el-menu-item, .el-submenu__title {
            height: 35px;
            line-height: 35px;
        }

        .el-table--small td, .el-table--small th {
            padding: 2px 0;
        }

        .el-dialog {
            width: 30%;
        }

        .el-range-editor {
            width: 200px !important;
        }

        .el-dialog .el-form-item__label {
            width: 30%;
            font-weight: 700;
        }

        .el-dialog .el-input {
            width: 70%;
        }

        .el-dialog .el-select {
            width: 60%
        }

        /*[v-cloak] {*/
        /*display: none;*/
        /*}*/
    </style>
    @yield('css')
</head>
<body>
<div id="app" v-cloak>
    <el-container>
        <el-header></el-header>
        <el-container>
            <el-aside width="200px">@widget('/SideMenu')</el-aside>
            <el-main>@content()</el-main>
        </el-container>
    </el-container>
</div>
<script src="https://cdn.bootcss.com/vue/2.5.16/vue.js"></script>
<script src="https://cdn.bootcss.com/element-ui/2.4.0/index.js"></script>
<script src="https://cdn.bootcss.com/axios/0.18.0/axios.js"></script>
<script src="https://cdn.bootcss.com/moment.js/2.22.1/moment.js"></script>
<script src="https://cdn.bootcss.com/qs/6.5.1/qs.min.js"></script>
<script src="https://cdn.bootcss.com/lodash.js/4.17.5/lodash.js"></script>
<script>
    Vue.prototype.$axios = axios;
    Vue.prototype.$moment = moment;
    Vue.prototype.$qs = Qs;
    Vue.prototype._ = _;
    axios.defaults.baseURL = 'http://www.manaphp.com';
    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
    axios.interceptors.response.use(function (res) {
            if (typeof res.data === 'string') {
                alert('unexpected response');
            } else {
                return res;
            }
        },
        function (error) {
            switch (error.response.status) {
                case 401:
                    window.location.href = '@action(user/login)';
            }
        });
    Vue.mixin({
        methods: {
            ajax_get: function (url, success) {
                this.$axios.get(url).then(function (res) {
                    console.log(res);
                    if (res.data.code === 0) {
                        success.bind(this)(res.data.data);
                    } else {
                        this.$alert(res.data.message);
                    }
                }.bind(this));
            },
            ajax_post: function (url, data, success) {
                this.$axios.post(url, data).then(function (res) {
                    if (res.data.code === 0) {
                        success.bind(this)(res.data.data);
                    } else {
                        this.$alert(res.data.message);
                    }
                }.bind(this));
            },
            reload_table: function () {
                var qs = this.$qs.stringify(this.request);
                window.history.replaceState(null, null, qs ? ('?' + qs) : '');
                this.response = [];
                this.$axios.get(document.location.href).then(function (res) {
                    if (res.data.code !== 0) {
                        this.$alert(res.data.message);
                    } else {
                        this.response = res.data.data;
                    }
                }.bind(this));
            },
            fDate: function (row, column, value) {
                return value ? this.$moment(value * 1000).format('YYYY-MM-DD HH:mm:ss') : '';
            },
            fEnabled: function (row, column, value) {
                return ['disabled', 'enabled'][value];
            },
        },
        created: function () {
            var qs = this.$qs.parse(document.location.search.substr(1));
            if (this.request) {
                for (var k in qs) {
                    this.request[k] = qs[k];
                }
            }
        }
    });
</script>
@yield('script')
@debugger()
</body>
</html>
