<div class="search-box">
    <show-edit></show-edit>
    <selector v-model="request.role_id" :data="roles2"></selector>
</div>
<edit-form>
    <el-checkbox-group v-model="edit.permission_ids">
        <el-checkbox v-for="permission in permissions" :label="permission.permission_id"
                     :key="permission.permission_id" style="width: 20%; text-align: left">
            @{{permission.display_name}}
        </el-checkbox>
    </el-checkbox-group>
</edit-form>
<result-table>
    <result-index></result-index>
    <result-id prop="id"></result-id>
    <el-table-column label="权限ID" width="100">
        <template v-slot="{row}"><a :href="'permission/?permission_id='+row.permission_id">@{{row.permission_id}}</a>
        </template>
    </el-table-column>
    <result-column prop="permission.path" width="200"></result-column>
    <el-table-column label="角色列表" width="300">
        <template v-slot="{row}">
            <el-button size="small" v-for="role in row.roles" :key="role.role_id" type="text"
                       @click.native="request.role_id = role.role_id" :disabled="request.role_id == role.role_id"
                       :title="role.role_name">
                @{{ role.display_name }}
            </el-button>
        </template>
    </el-table-column>
    <result-column prop="permission.display_name" label="显示名称" show-overflow-tooltip></result-column>
    <result-account prop="creator_name"></result-account>
    <result-timestamp prop="created_time"></result-timestamp>
</result-table>

@section('script')
    <script>
        vm = new App({
            data: {
                request: {role_id: ''},
                response: [],

                roles: [],
                edit: {
                    role_id: '',
                    role_name: '',
                    permission_ids: []
                },
                permissions: []
            },
            computed: {
                roles2() {
                    let excludes = ['guest', 'user', 'admin'];
                    return this.roles.filter(v => !excludes.includes(v.role_name));
                }
            },
            mounted() {
                this.ajax_get("role/list", (res) => this.roles = res);
            },
            methods: {
                show_edit() {
                    this.edit.permission_ids = this._.map(this.response, 'permission_id');
                    this.edit.role_id = this.request.role_id;

                    if (!this.permissions.length) {
                        this.ajax_get("permission/list", (res) => {
                            this.permissions = res;
                            this.editVisible = true;
                        });
                    } else {
                        this.editVisible = true;
                    }
                }
            }
        });
    </script>
@append
