<div class="search-box">
    <el-row>
        <el-col :span="2">
            <el-input v-model="list.request.admin_name" placeholder="admin_name" size="small"
                      @keyup.enter.native="load_table_data"></el-input>
        </el-col>
        <el-col :span="2">
            <el-select v-model="list.request.role_id" size="small" clearable @change="load_table_data">
                <el-option v-for="(name, id) in roles" :key="id" :label="name" :value="id"></el-option>
            </el-select>
        </el-col>
        <el-col :span="2">
            <el-button @click="load_table_data" type="primary" size="small" icon="el-icon-search">search</el-button>
        </el-col>
    </el-row>
</div>
<el-dialog title="edit" :visible.sync="editVisible">
    <el-form :model="edit" ref="edit">
        <el-form-item label="user id">
            <div>@{{edit.user_id}}</div>
        </el-form-item>
        <el-form-item label="user name">
            <div>@{{edit.user_name}}</div>
        </el-form-item>
        <el-form-item label="role name" prop="role_name">
            <el-checkbox-group v-model="edit.role_ids">
                <el-checkbox v-for="(role,id) in roles" :label="id" :key="id">@{{role}}</el-checkbox>
            </el-checkbox-group>
        </el-form-item>
    </el-form>
    <div slot="footer">
        <el-button type="primary" @click="do_edit">save</el-button>
        <el-button @click="editVisible=false">cancel</el-button>
    </div>
</el-dialog>
<el-dialog title="detail" :visible.sync="detailVisible">
    <el-table :data="detail" border size="small">
        <el-table-column type="index" label="#" width="50"></el-table-column>
        <el-table-column prop="id" label="id" width="100"></el-table-column>
        <el-table-column prop="user_id" label="user_id" with="100"></el-table-column>
        <el-table-column prop="user_name" label="user_name" width="100"></el-table-column>
        <el-table-column prop="role_id" label="role_id" width="100"></el-table-column>
        <el-table-column prop="role_name" label="role_name"></el-table-column>
        <el-table-column prop="creator_id" label="creator_id"></el-table-column>
        <el-table-column prop="creator_name" label="creator_name"></el-table-column>
        <el-table-column prop="created_time" label="created_time" :formatter="formatter_date"
                         width="150"></el-table-column>
    </el-table>
</el-dialog>
<div class="result-box">
    <el-table :data="list.response.items" border size="small">
        <el-table-column type="index" label="#" width="50"></el-table-column>
        <el-table-column prop="admin_id" label="admin_id" width="100"></el-table-column>
        <el-table-column prop="admin_name" label="admin_name" width="100"></el-table-column>
        <el-table-column prop="email" label="email" width="200"></el-table-column>
        <el-table-column label="roles">
            <template slot-scope="scope">
                <el-tag size="small" v-for="(item,index) in scope.row.roles" :key="index">@{{ item }}</el-tag>
            </template>
        </el-table-column>
        <el-table-column></el-table-column>
        <el-table-column fixed="right" label="operation" width="200">
            <template slot-scope="scope">
                <el-button @click="show_edit(scope.row)" size="mini" icon="el-icon-edit" plain round>edit</el-button>
                <el-button @click="show_detail(scope.row)" size="mini" icon="el-icon-view" plain round>detail
                </el-button>
            </template>
        </el-table-column>
    </el-table>
    <el-pagination @current-change="load_table_data" :current-page.sync="list.request.page"
                   :page-size="list.response.size"
                   :total="list.response.count" layout="total, prev, pager, next"></el-pagination>
</div>
@section('script')
    <script>

        vm = new Vue({
            el: '#app',
            data: {
                list: {
                    request: {},
                    response: []
                },

                editVisible: false,
                edit: {
                    user_id: '',
                    user_name: '',
                    role_ids: []
                },

                detailVisible: false,
                detail: [],
                roles: []
            },
            mounted: function () {
                this.$axios.get('@action(role/list)').then(function (res) {
                    if (res.data.code === 0) {
                        this.roles = res.data.data;
                    } else {
                        this.$alert(res.data.message);
                    }
                }.bind(this));
                this.load_table_data();
            },
            methods: {
                show_edit: function (row) {
                    this.editVisible = true;

                    this.edit.user_id = row.admin_id;
                    this.edit.user_name = row.admin_name;
                    this.edit.email = row.email;
                    this.edit.role_ids = this._.keys(row.roles);
                },
                do_edit: function () {
                    this.$axios.post('@action(edit)', this.edit).then(function (res) {
                        if (res.data.code === 0) {
                            this.editVisible = false;
                            this.load_table_data();
                        } else {
                            this.$alert(res.data.message);
                        }
                    }.bind(this));
                },
                show_detail: function (row) {
                    this.detailVisible = true;
                    this.$axios.post('@action(detail)', {user_id: row.admin_id}).then(function (res) {
                        this.detail = res.data.data;
                    }.bind(this));
                }
            }
        });
    </script>
@append